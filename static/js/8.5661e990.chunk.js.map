{"version":3,"sources":["components/form/controls/Button/Button.styled.ts","components/form/controls/Button/Button.tsx","components/form/controls/Input/Input.styled.ts","components/form/controls/Input/Input.tsx","components/form/controls/common/ErrorMessage/ErrorMessage.tsx","components/form/controls/common/ErrorMessage/ErrorMessage.styled.ts","modules/Home/pages/Home.tsx"],"names":["Button","styled","button","theme","color","oceanLight","borderRadius","base","fontWeight","bold","fontSize","desktop","smaller","white","Color","darken","string","isFilled","props","title","disabled","onClick","type","fill","Container","div","ErrorWrapper","Label","label","small","grey","hasValue","tiny","hasError","danger","InputComponent","input","black","IconWrapper","InputWrapper","hasIcon","Input","value","error","onChange","onBlur","icon","autoComplete","autoCapitalize","spellCheck","autoCorrect","ErrorMessage","pattern","Demo","sessionToken","onLogout","onOpenTrainingLibrary","onShowToast","style","textAlign","Home","dispatch","useDispatch","SessionUtils","getSessionToken","undefined","useEffect","toast","success","logoutUser","push","trainingLibraryRoutes","trainingLibrary","delay","setTimeout","info","warn","hideProgressBar","autoClose","closeOnClick","alert","background","border","position","dark","segmentId"],"mappings":"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","file":"static/js/8.5661e990.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport { ButtonProps } from './types'\nimport Color from 'color'\n\nexport const Button = styled.button<ButtonProps>`\n  display: inline-block;\n  border: 0;\n  cursor: pointer;\n  transition: background 0.2s ease;\n  padding: 20px 60px;\n  ${({ theme }) => `\n    background: ${theme.color.oceanLight};\n    border-radius: ${theme.borderRadius.base};\n    font-weight: ${theme.fontWeight.bold};\n    font-size: ${theme.fontSize.desktop.smaller};\n    color: ${theme.color.white};\n  `}\n\n  ${({ theme }) => `\n    &:hover:not(:disabled) {\n      background: ${Color(theme.color.oceanLight).darken(0.15).string()};\n    }\n  `}\n\n  \n\n  &:disabled {\n    cursor: default;\n    opacity: 0.75;\n  }\n\n  ${({ isFilled }) => isFilled && `width: 100%;`}\n`\n","import React from 'react'\nimport { Button as StyledButton } from './Button.styled'\n\ntype ButtonType = 'button' | 'reset' | 'submit'\n\ntype ButtonProps = {\n  title: string\n  disabled?: boolean\n  onClick?: () => void\n  type?: ButtonType\n  fill?: boolean\n}\n\nconst Button: React.FC<ButtonProps> = props => {\n  const { title, disabled, onClick, type, fill } = props\n  return (\n    <StyledButton\n      isFilled={fill}\n      type={type}\n      disabled={disabled}\n      onClick={onClick}\n    >\n      {title}\n    </StyledButton>\n  )\n}\n\nexport default Button\n","import styled from 'styled-components'\nimport { LabelProps, InputWrapperProps, IconWrapperProps } from './types'\nimport { ErrorWrapper } from 'components/form/controls/common/ErrorMessage/ErrorMessage.styled'\n\nexport const Container = styled.div`\n  position: relative;\n\n  ${ErrorWrapper} {\n    margin-top: -2px;\n    border-top-left-radius: 0;\n    border-top-right-radius: 0;\n  }\n`\n\nexport const Label = styled.label<LabelProps>`\n  position: absolute;\n  top: 50%;\n  left: 20px;\n  transform: translateY(-50%);\n  transition: all 0.3s ease;\n  ${({ theme }) => `\n    font-size: ${theme.fontSize.desktop.small};\n    color: ${theme.color.grey};\n  `}\n\n  ${({ hasValue, theme }) =>\n    hasValue &&\n    `\n    transform: translateY(-120%);\n    font-size: ${theme.fontSize.desktop.tiny};\n  `}\n\n  ${({ hasError, theme }) =>\n    hasError &&\n    `\n    color: ${theme.color.danger};\n  `}\n`\n\nexport const InputComponent = styled.input`\n  width: 100%;\n  height: 60px;\n  padding: 27px 20px 13px;\n  outline: 0;\n  background: transparent;\n  box-sizing: border-box;\n  border: 0;\n  line-height: 20px;\n  ${({ theme }) => `\n    font-weight: ${theme.fontWeight.bold};\n    font-size: ${theme.fontSize.desktop.small};\n    color: ${theme.color.black};\n  `}\n`\n\nexport const IconWrapper = styled.div<IconWrapperProps>`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  left: 10px;\n  top: 10px;\n  width: 40px;\n  height: 40px;\n\n  svg {\n    width: 20px;\n    height: 20px;\n    g {\n      transition: all 0.3s ease;\n    }\n  }\n\n  ${({ hasError, theme }) =>\n    hasError &&\n    `\n    svg g {\n      stroke: ${theme.color.danger};\n    }\n  `}\n`\n\nexport const InputWrapper = styled.div<InputWrapperProps>`\n  width: 100%;\n  height: 60px;\n  position: relative;\n  ${({ theme }) => `\n    background: ${theme.color.white};\n    border-radius: ${theme.borderRadius.base};\n  `}\n\n  &:focus-within {\n    ${Label} {\n      transform: translateY(-120%);\n      ${({ theme }) => `\n        font-size: ${theme.fontSize.desktop.tiny};\n        color: ${theme.color.oceanLight};\n      `}\n    }\n\n    ${IconWrapper} {\n      svg g {\n        stroke: ${({ theme }) => theme.color.oceanLight};\n      }\n    }\n  }\n\n  ${({ hasIcon }) =>\n    hasIcon &&\n    `\n    ${InputComponent} { padding-left: 60px; }\n    ${Label} { left: 60px; }\n  `}\n`\n","import React from 'react'\nimport { ErrorMessage } from 'components/form/controls/common'\nimport {\n  Container,\n  InputWrapper,\n  Label,\n  InputComponent,\n  IconWrapper,\n} from './Input.styled'\n\ntype InputProps = React.InputHTMLAttributes<HTMLInputElement> & {\n  error?: string | undefined\n  icon?: React.ReactNode | undefined\n}\n\nconst Input: React.FC<InputProps> = props => {\n  const {\n    value,\n    type = 'text',\n    title,\n    disabled,\n    error,\n    onChange,\n    onBlur,\n    icon,\n  } = props\n\n  return (\n    <Container>\n      <InputWrapper hasIcon={!!icon}>\n        {icon && <IconWrapper hasError={!!error}>{icon}</IconWrapper>}\n        <Label hasValue={!!value} hasError={!!error}>\n          {title}\n        </Label>\n        <InputComponent\n          value={value}\n          type={type}\n          disabled={disabled}\n          autoComplete='off'\n          autoCapitalize='off'\n          spellCheck='false'\n          autoCorrect='off'\n          onChange={onChange}\n          onBlur={onBlur}\n        />\n      </InputWrapper>\n      <ErrorMessage error={error} />\n    </Container>\n  )\n}\n\nexport default Input\n","import React from 'react'\nimport { ErrorWrapper } from './ErrorMessage.styled'\n\ntype ErrorMessageProps = {\n  error: string | undefined\n}\n\nconst ErrorMessage: React.FC<ErrorMessageProps> = ({ error }) => {\n  if (!error) return null\n  return <ErrorWrapper>{error}</ErrorWrapper>\n}\n\nexport default ErrorMessage\n","import styled from 'styled-components'\n\nexport const ErrorWrapper = styled.div`\n  position: relative;\n  padding: 10px 13px;\n  word-wrap: break-word;\n  ${({ theme }) => `\n    background-color: ${theme.color.danger};\n    ${theme.pattern};\n    color: ${theme.color.white};\n    border-radius: ${theme.borderRadius.base};\n    font-size: ${theme.fontSize.desktop.small};\n    font-weight: ${theme.fontWeight.bold};\n  `}\n`\n","import React, { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { push } from 'connected-react-router'\nimport { toast } from 'react-toastify'\nimport { SessionUtils } from 'utils'\nimport { PageLayout } from 'layouts'\nimport { PageLayoutSegmentProps } from 'layouts/types'\nimport { Button } from 'components/form/controls'\nimport { logoutUser } from 'modules/Auth/slices/auth'\nimport trainingLibraryRoutes from 'modules/TrainingLibrary/routing/routes'\n\n\ntype DemoProps = PageLayoutSegmentProps & {\n  sessionToken?: string\n  onLogout: () => void\n  onOpenTrainingLibrary: () => void\n  onShowToast: () => void\n}\n\nconst Demo: React.FC<DemoProps> = ({\n  sessionToken,\n  onLogout,\n  onOpenTrainingLibrary,\n  onShowToast,\n}) => {\n  return (\n    <div style={{ color: '#ffffff', textAlign: 'center' }}>\n      <h1>Session token:</h1>\n      <div>{sessionToken}</div>\n      <br />\n      <Button title='Logout' onClick={onLogout} />\n      <br />\n      <br />\n      <Button title='TrainingLibrary' onClick={onOpenTrainingLibrary} />\n      <br />\n      <br />\n      <Button title='Show Toast' onClick={onShowToast} />\n    </div>\n  )\n}\n\nconst Home: React.FC = () => {\n  const dispatch = useDispatch()\n  const sessionToken = SessionUtils.getSessionToken() || undefined\n\n  useEffect(() => {\n    toast.success(\"Login successful. Please choose your course\")\n  }, [])\n\n  function logout() {\n    dispatch(logoutUser())\n  }\n\n  function openTrainingLibrary() {\n    dispatch(push(trainingLibraryRoutes.trainingLibrary))\n  }\n\n  function showToast() {\n    toast.success(\"Success\", { delay: 100 });\n    setTimeout(() => toast.info(\"Info\"), 500);\n    setTimeout(() => toast.warn('Warning', {\n      hideProgressBar: true,\n      autoClose: false,\n      closeOnClick: false,\n      }), 1000);\n    setTimeout(() => toast.warn(\n      (<div>Custorm warning<br /><br />\n          <p>Some description</p><br />\n          <button onClick={() => alert('click1')}>my button</button>\n          <button onClick={() => alert('click2')}>my button</button>\n        </div>\n      ), {\n        hideProgressBar: true,\n        autoClose: false,\n        closeOnClick: false,\n        style: { background: \"grey\", border: \"2px solid white\" }\n      },\n    ), 1000);\n    setTimeout(() => toast.error(\"Error\",\n      { closeOnClick: false, hideProgressBar: true, autoClose: false, position: 'top-right' }), 1500);\n    setTimeout(() => toast('🦄 Icon default!'), 2000);\n    setTimeout(() => toast.dark('🦄 Dark'), 2500);\n  }\n\n  return (\n    <PageLayout>\n      <Demo\n        sessionToken={sessionToken}\n        onLogout={logout}\n        onOpenTrainingLibrary={openTrainingLibrary}\n        onShowToast={showToast}\n        segmentId='content'\n      />\n    </PageLayout>\n  )\n}\n\nexport default Home\n"],"sourceRoot":""}