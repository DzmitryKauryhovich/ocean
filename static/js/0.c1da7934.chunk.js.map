{"version":3,"sources":["../node_modules/color/index.js","../node_modules/color-name/index.js","../node_modules/color-convert/conversions.js","../node_modules/color-string/index.js","../node_modules/simple-swizzle/index.js","../node_modules/simple-swizzle/node_modules/is-arrayish/index.js","../node_modules/color-convert/index.js","../node_modules/color-convert/route.js"],"names":["colorString","require","convert","_slice","slice","skippedModels","hashedModelKeys","Object","keys","forEach","model","call","labels","sort","join","limiters","Color","obj","this","Error","i","channels","color","valpha","result","get","value","length","newArr","zeroArray","splice","indexOf","alpha","hashedKeys","JSON","stringify","push","limit","Math","max","min","freeze","getset","channel","modifier","Array","isArray","m","val","arguments","maxfn","v","assertArray","arr","prototype","toString","string","toJSON","places","self","to","rgb","args","round","concat","percentString","percent","array","object","unitArray","unitObject","r","g","b","map","num","Number","toFixed","roundTo","roundToPlace","red","green","blue","hue","saturationl","lightness","saturationv","chroma","gray","white","wblack","cyan","magenta","yellow","black","x","y","z","l","a","keyword","hex","rgbNumber","luminosity","lum","chan","pow","contrast","color2","lum1","lum2","level","contrastRatio","isDark","isLight","negate","lighten","ratio","hsl","darken","saturate","desaturate","whiten","hwb","blacken","grayscale","fade","opaquer","rotate","degrees","mix","mixinColor","weight","color1","p","undefined","w","w1","w2","newAlpha","raw","module","exports","cssKeywords","reverseKeywords","key","hasOwnProperty","hsv","cmyk","xyz","lab","lch","ansi16","ansi256","hcg","apple","defineProperty","h","delta","rdif","gdif","bdif","s","diff","diffc","c","k","reversed","currentClosestKeyword","currentClosestDistance","Infinity","distance","t1","t2","t3","smin","lmin","hi","floor","f","q","t","sl","vmin","n","wh","bl","y2","x2","z2","atan2","PI","sqrt","hr","cos","sin","ansi","mult","rem","toUpperCase","substring","match","split","char","integer","parseInt","mg","pure","colorNames","swizzle","reverseNames","name","cs","clamp","hexDouble","str","toLowerCase","hexAlpha","i2","parseFloat","isNaN","rgba","hsla","hwba","isArrayish","results","len","arg","wrap","fn","Function","getOwnPropertyDescriptor","constructor","conversions","route","fromModel","routes","toModel","wrappedFn","conversion","wrapRounded","wrapRaw","deriveBFS","graph","models","parent","buildGraph","queue","current","pop","adjacents","adjacent","node","unshift","link","from","wrapConversion","path","cur"],"mappings":"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","file":"static/js/0.c1da7934.chunk.js","sourcesContent":["'use strict';\n\nvar colorString = require('color-string');\nvar convert = require('color-convert');\n\nvar _slice = [].slice;\n\nvar skippedModels = [\n\t// to be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// shouldn't really be in color-convert either...\n\t'hex'\n];\n\nvar hashedModelKeys = {};\nObject.keys(convert).forEach(function (model) {\n\thashedModelKeys[_slice.call(convert[model].labels).sort().join('')] = model;\n});\n\nvar limiters = {};\n\nfunction Color(obj, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tvar i;\n\tvar channels;\n\n\tif (obj == null) { // eslint-disable-line no-eq-null,eqeqeq\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (obj instanceof Color) {\n\t\tthis.model = obj.model;\n\t\tthis.color = obj.color.slice();\n\t\tthis.valpha = obj.valpha;\n\t} else if (typeof obj === 'string') {\n\t\tvar result = colorString.get(obj);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + obj);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (obj.length) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tvar newArr = _slice.call(obj, 0, channels);\n\t\tthis.color = zeroArray(newArr, channels);\n\t\tthis.valpha = typeof obj[channels] === 'number' ? obj[channels] : 1;\n\t} else if (typeof obj === 'number') {\n\t\t// this is always RGB - can be converted later on.\n\t\tobj &= 0xFFFFFF;\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(obj >> 16) & 0xFF,\n\t\t\t(obj >> 8) & 0xFF,\n\t\t\tobj & 0xFF\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tvar keys = Object.keys(obj);\n\t\tif ('alpha' in obj) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof obj.alpha === 'number' ? obj.alpha : 0;\n\t\t}\n\n\t\tvar hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(obj));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tvar labels = convert[this.model].labels;\n\t\tvar color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(obj[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tvar limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString: function () {\n\t\treturn this.string();\n\t},\n\n\ttoJSON: function () {\n\t\treturn this[this.model]();\n\t},\n\n\tstring: function (places) {\n\t\tvar self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tvar args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to[self.model](args);\n\t},\n\n\tpercentString: function (places) {\n\t\tvar self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tvar args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to.rgb.percent(args);\n\t},\n\n\tarray: function () {\n\t\treturn this.valpha === 1 ? this.color.slice() : this.color.concat(this.valpha);\n\t},\n\n\tobject: function () {\n\t\tvar result = {};\n\t\tvar channels = convert[this.model].channels;\n\t\tvar labels = convert[this.model].labels;\n\n\t\tfor (var i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray: function () {\n\t\tvar rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject: function () {\n\t\tvar rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround: function (places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color(this.color.map(roundToPlace(places)).concat(this.valpha), this.model);\n\t},\n\n\talpha: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(this.color.concat(Math.max(0, Math.min(1, val))), this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, function (val) { return ((val % 360) + 360) % 360; }), // eslint-disable-line brace-style\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(100)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(100)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(val);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(val);\n\t\t}\n\n\t\treturn colorString.to.hex(this.rgb().round().color);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.rgb().color;\n\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.rgb().color;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight: function () {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = this.rgb();\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\t\treturn rgb;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale: function () {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar rgb = this.rgb().color;\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(val, val, val);\n\t},\n\n\tfade: function (ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer: function (ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.hsl();\n\t\tvar hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix: function (mixinColor, weight) {\n\t\t// ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tif (!mixinColor || !mixinColor.rgb) {\n\t\t\tthrow new Error('Argument to \"mix\" was not a Color instance, but rather an instance of ' + typeof mixinColor);\n\t\t}\n\t\tvar color1 = mixinColor.rgb();\n\t\tvar color2 = this.rgb();\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t}\n};\n\n// model conversion methods and static constructors\nObject.keys(convert).forEach(function (model) {\n\tif (skippedModels.indexOf(model) !== -1) {\n\t\treturn;\n\t}\n\n\tvar channels = convert[model].channels;\n\n\t// conversion methods\n\tColor.prototype[model] = function () {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (arguments.length) {\n\t\t\treturn new Color(arguments, model);\n\t\t}\n\n\t\tvar newAlpha = typeof arguments[channels] === 'number' ? channels : this.valpha;\n\t\treturn new Color(assertArray(convert[this.model][model].raw(this.color)).concat(newAlpha), model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (color) {\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(_slice.call(arguments), channels);\n\t\t}\n\t\treturn new Color(color, model);\n\t};\n});\n\nfunction roundTo(num, places) {\n\treturn Number(num.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (num) {\n\t\treturn roundTo(num, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tmodel.forEach(function (m) {\n\t\t(limiters[m] || (limiters[m] = []))[channel] = modifier;\n\t});\n\n\tmodel = model[0];\n\n\treturn function (val) {\n\t\tvar result;\n\n\t\tif (arguments.length) {\n\t\t\tif (modifier) {\n\t\t\t\tval = modifier(val);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = val;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(val) {\n\treturn Array.isArray(val) ? val : [val];\n}\n\nfunction zeroArray(arr, length) {\n\tfor (var i = 0; i < length; i++) {\n\t\tif (typeof arr[i] !== 'number') {\n\t\t\tarr[i] = 0;\n\t\t}\n\t}\n\n\treturn arr;\n}\n\nmodule.exports = Color;\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","/* MIT license */\nvar cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar rdif;\n\tvar gdif;\n\tvar bdif;\n\tvar h;\n\tvar s;\n\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar v = Math.max(r, g, b);\n\tvar diff = v - Math.min(r, g, b);\n\tvar diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = s = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","/* MIT license */\nvar colorNames = require('color-name');\nvar swizzle = require('simple-swizzle');\n\nvar reverseNames = {};\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (colorNames.hasOwnProperty(name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {},\n\tget: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar keyword = /(\\D+)/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = Math.round((parseInt(hexAlpha, 16) / 255) * 100) / 100;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = Math.round((parseInt(hexAlpha + hexAlpha, 16) / 255) * 100) / 100;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\n\t\tif (!rgb) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?(?:\\d*\\.)?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = (parseFloat(match[1]) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d*[\\.]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = num.toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n","'use strict';\n\nvar isArrayish = require('is-arrayish');\n\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\n\nvar swizzle = module.exports = function swizzle(args) {\n\tvar results = [];\n\n\tfor (var i = 0, len = args.length; i < len; i++) {\n\t\tvar arg = args[i];\n\n\t\tif (isArrayish(arg)) {\n\t\t\t// http://jsperf.com/javascript-array-concat-vs-push/98\n\t\t\tresults = concat.call(results, slice.call(arg));\n\t\t} else {\n\t\t\tresults.push(arg);\n\t\t}\n\t}\n\n\treturn results;\n};\n\nswizzle.wrap = function (fn) {\n\treturn function () {\n\t\treturn fn(swizzle(arguments));\n\t};\n};\n","module.exports = function isArrayish(obj) {\n\tif (!obj || typeof obj === 'string') {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && (obj.splice instanceof Function ||\n\t\t\t(Object.getOwnPropertyDescriptor(obj, (obj.length - 1)) && obj.constructor.name !== 'String')));\n};\n","var conversions = require('./conversions');\nvar route = require('./route');\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","var conversions = require('./conversions');\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n"],"sourceRoot":""}